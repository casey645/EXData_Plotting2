install.packages("nlme")
install.packages("lattice")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
table(BodyWeight$Diet)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
plot(p)
ibrary(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages("ggplot2")
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages("plot2groups")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
table(BodyWeight$Diet) # 1, 2, 3
lpoint()?
?axis
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
plot(p)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
?panel.lmline()
?lpoints()
setwd("~/R_Coursera Files/ExploreDataAnal/EXData_Plotting2")
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
file.dest <- 'NEI.zip'
download.file( file.url, file.dest )
source.files <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
print(source.files)
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
# clean up
file.remove( source.files )
rm(source.files)
# save to RData file
save.image( 'NEI.RData' )
# 3. inspect data and recode
str(SCC)
head(SCC)
str(NEI)
head(NEI)
names(SCC)
names(NEI)
new.names <- gsub( '_', '.', names(SCC)  )
new.names <- tolower( new.names )
names( SCC ) <- new.names
new.names <- gsub( '_', '.', names(NEI)  )
new.names <- tolower( new.names )
names( NEI ) <- new.names
names(SCC)
names(NEI)
rm(new.names)
save.image( 'NEI.RData' )
# 4. plot the data
# summarize the data
library(plyr)
emissions <- ddply(NEI, .(year), summarize, total.emissions = sum(emissions) )
# plot the data
png('plot1.png')
plot(emissions, type='l')
dev.off()
## Question2 - plot2
##--------------------------
# this file does the following
# 1. download data from UCI Machine Learning Repository
# 2. read the data into R
# 3. inspect and recode the data
# 4. plot the data
# =========================
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
file.dest <- 'NEI.zip'
download.file( file.url, file.dest )
source.files <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
print(source.files)
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
# clean up
file.remove( source.files )
rm(source.files)
# save to RData file
save.image( 'NEI.RData' )
# 3. inspect data and recode
str(SCC)
head(SCC)
str(NEI)
head(NEI)
names(SCC)
names(NEI)
new.names <- gsub( '_', '.', names(SCC)  )
new.names <- tolower( new.names )
names( SCC ) <- new.names
new.names <- gsub( '_', '.', names(NEI)  )
new.names <- tolower( new.names )
names( NEI ) <- new.names
names(SCC)
names(NEI)
rm(new.names)
save.image( 'NEI.RData' )
# 4. plot the data
# subset the data
NEI <- subset(NEI, NEI$fips == "24510")
# summarize the data
library(plyr)
emissions <- ddply(NEI, .(year), summarize, total.emissions = sum(emissions) )
# plot the data
png('plot2.png')
plot(emissions, type='l')
dev.off()
## Question 3 - plot3
#--------------------------
# this file does the following
# 1. download data from UCI Machine Learning Repository
# 2. read the data into R
# 3. inspect and recode the data
# 4. plot the data
# =========================
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
file.dest <- 'NEI.zip'
download.file( file.url, file.dest )
source.files <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
print(source.files)
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
# clean up
file.remove( source.files )
rm(source.files)
# save to RData file
save.image( 'NEI.RData' )
# 3. inspect data and recode
str(SCC)
head(SCC)
str(NEI)
head(NEI)
names(SCC)
names(NEI)
new.names <- gsub( '_', '.', names(SCC)  )
new.names <- tolower( new.names )
names( SCC ) <- new.names
new.names <- gsub( '_', '.', names(NEI)  )
new.names <- tolower( new.names )
names( NEI ) <- new.names
names(SCC)
names(NEI)
rm(new.names)
save.image( 'NEI.RData' )
# 4. plot the data
install.packages('ggplot2')
library(ggplot2)
library(plyr)
emissions <- ddply(NEI, .(year, type), summarize, total.emissions = sum(emissions) )
# create the plot object
emi.plot <- ggplot(emissions, aes(year, total.emissions, color = type) )
emi.plot <- emi.plot + geom_line()
# plot the data
png('plot3.png')
print(emi.plot)
dev.off()
# plot4.R
#--------------------------
# # this file does the following
# 1. download data from UCI Machine Learning Repository
# 2. read the data into R
# 3. inspect and recode the data
# 4. plot the data
# =========================
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
file.dest <- 'NEI.zip'
download.file( file.url, file.dest )
source.files <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
print(source.files)
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
# clean up
file.remove( source.files )
rm(source.files)
# save to RData file
save.image( 'NEI.RData' )
# 3. inspect data and recode
str(SCC)
head(SCC)
str(NEI)
head(NEI)
names(SCC)
names(NEI)
new.names <- gsub( '_', '.', names(SCC)  )
new.names <- tolower( new.names )
names( SCC ) <- new.names
new.names <- gsub( '_', '.', names(NEI)  )
new.names <- tolower( new.names )
names( NEI ) <- new.names
names(SCC)
names(NEI)
rm(new.names)
institutional <- SCC[which(SCC$ei.sector == "Fuel Comb - Comm/Institutional - Coal"),]$scc
electric <- SCC[which(SCC$ei.sector == "Fuel Comb - Electric Generation - Coal"),]$scc
industrial <- SCC[which(SCC$ei.sector == "Fuel Comb - Industrial Boilers, ICEs - Coal"),]$scc
NEI$institutional <- ifelse( NEI$scc %in% institutional, 'institutional', NA )
NEI$electric <- ifelse( NEI$scc %in% electric, 'electric', NA )
NEI$industrial <- ifelse( NEI$scc %in% industrial, 'industrial', NA )
rm(institutional)
rm(electric)
rm(industrial)
NEI$coal <- with(NEI,
ifelse(!is.na(institutional),
'institutional',
ifelse(!is.na(electric),
'electric',
ifelse(!is.na(industrial),
'industrial',
NA
)
)
)
)
library(plyr)
emissions <- ddply(subset(NEI, !is.na(coal)), .(year, coal), summarize, total.emissions = sum(emissions) )
# 4. plot the data
library(ggplot2)
nei.plot <- ggplot(emissions, aes(year, total.emissions, color = coal) )
nei.plot <- nei.plot + geom_line()
# plot the data
png('plot4.png')
print(nei.plot)
dev.off()
# plot5.R
#--------------------------
# this file does the following
# 1. download data from UCI Machine Learning Repository
# 2. read the data into R
# 3. inspect and recode the data
# 4. plot the data
# =========================
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
file.dest <- 'NEI.zip'
download.file( file.url, file.dest )
source.files <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
print(source.files)
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
# clean up
file.remove( source.files )
rm(source.files)
# save to RData file
save.image( 'NEI.RData' )
# 3. inspect data and recode
str(SCC)
head(SCC)
str(NEI)
head(NEI)
names(SCC)
names(NEI)
new.names <- gsub( '_', '.', names(SCC)  )
new.names <- tolower( new.names )
names( SCC ) <- new.names
new.names <- gsub( '_', '.', names(NEI)  )
new.names <- tolower( new.names )
names( NEI ) <- new.names
names(SCC)
names(NEI)
rm(new.names)
levels(SCC$ei.sector)
heavy.diesel <- SCC[which(SCC$ei.sector == "Mobile - On-Road Diesel Heavy Duty Vehicles"),]$scc
light.diesel <- SCC[which(SCC$ei.sector == "Mobile - On-Road Diesel Light Duty Vehicles"),]$scc
heavy.gasoline <- SCC[which(SCC$ei.sector == "Mobile - On-Road Gasoline Heavy Duty Vehicles"),]$scc
light.gasoline <- SCC[which(SCC$ei.sector == "Mobile - On-Road Gasoline Light Duty Vehicles"),]$scc
NEI$heavy.diesel <- ifelse( NEI$scc %in% heavy.diesel, TRUE, FALSE)
NEI$light.diesel <- ifelse( NEI$scc %in% light.diesel, TRUE, FALSE)
NEI$heavy.gasoline <- ifelse( NEI$scc %in% heavy.gasoline, TRUE, FALSE)
NEI$light.gasoline <- ifelse( NEI$scc %in% light.gasoline, TRUE, FALSE)
rm(heavy.diesel)
rm(light.diesel)
rm(heavy.gasoline)
rm(light.gasoline)
NEI$vehicle <- with(NEI,
ifelse(heavy.diesel == TRUE,
'heavy.diesel',
ifelse(light.diesel == TRUE,
'light.diesel',
ifelse(heavy.gasoline == TRUE,
'heavy.gasoline',
ifelse(light.gasoline == TRUE,
'light.gasoline',
NA
)
)
)
)
)
library(plyr)
NEI <- subset(NEI, fips == "24510")
emissions <- ddply(subset(NEI, !is.na(vehicle)), .(year, vehicle), summarize, total.emissions = sum(emissions) )
# 4. plot the data
library(ggplot2)
nei.plot <- ggplot(emissions, aes(year, total.emissions, color = vehicle) )
nei.plot <- nei.plot + geom_line()
# plot the data
png('plot5.png')
print(nei.plot)
dev.off()
# Questions 6 -- plot6
#--------------------------
# this file does the following
# 1. download data from UCI Machine Learning Repository
# 2. read the data into R
# 3. inspect and recode the data
# 4. plot the data
# =========================
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
file.dest <- 'NEI.zip'
download.file( file.url, file.dest )
source.files <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
print(source.files)
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
# clean up
file.remove( source.files )
rm(source.files)
# save to RData file
save.image( 'NEI.RData' )
# 3. inspect data and recode
str(SCC)
head(SCC)
str(NEI)
head(NEI)
names(SCC)
names(NEI)
new.names <- gsub( '_', '.', names(SCC)  )
new.names <- tolower( new.names )
names( SCC ) <- new.names
new.names <- gsub( '_', '.', names(NEI)  )
new.names <- tolower( new.names )
names( NEI ) <- new.names
names(SCC)
names(NEI)
rm(new.names)
# save to RData file
save.image( 'NEI.RData' )
levels(SCC$ei.sector)
heavy.diesel <- SCC[which(SCC$ei.sector == "Mobile - On-Road Diesel Heavy Duty Vehicles"),]$scc
light.diesel <- SCC[which(SCC$ei.sector == "Mobile - On-Road Diesel Light Duty Vehicles"),]$scc
heavy.gasoline <- SCC[which(SCC$ei.sector == "Mobile - On-Road Gasoline Heavy Duty Vehicles"),]$scc
light.gasoline <- SCC[which(SCC$ei.sector == "Mobile - On-Road Gasoline Light Duty Vehicles"),]$scc
NEI$heavy.diesel <- ifelse( NEI$scc %in% heavy.diesel, TRUE, FALSE)
NEI$light.diesel <- ifelse( NEI$scc %in% light.diesel, TRUE, FALSE)
NEI$heavy.gasoline <- ifelse( NEI$scc %in% heavy.gasoline, TRUE, FALSE)
NEI$light.gasoline <- ifelse( NEI$scc %in% light.gasoline, TRUE, FALSE)
rm(heavy.diesel)
rm(light.diesel)
rm(heavy.gasoline)
rm(light.gasoline)
NEI$vehicle <- with(NEI,
ifelse(heavy.diesel == TRUE,
'heavy.diesel',
ifelse(light.diesel == TRUE,
'light.diesel',
ifelse(heavy.gasoline == TRUE,
'heavy.gasoline',
ifelse(light.gasoline == TRUE,
'light.gasoline',
NA
)
)
)
)
)
library(plyr)
Balt.L.A <- subset(NEI, fips == "24510" | fips == "06037"  )
Balt.L.A <- subset(Balt.L.A, !is.na(vehicle) )
emissions <- ddply(Balt.L.A, .(year, fips), summarize, total.emissions = sum(emissions) )
emissions
# 4. plot the data
library(ggplot2)
nei.plot <- ggplot(emissions, aes(year, total.emissions, color = fips) )
nei.plot <- nei.plot + geom_line()
# plot the data
png('plot6.png')
print(nei.plot)
dev.off()
